fig <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig
fig<- Data_race_remove %>% filter(State=="AZ") %>% plot_ly(x = ~Month, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines", name='AIAN Covid-19 Cases') %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines", name='AIAN Deaths')
fig<-fig %>% layout(
title = "AIAN Rates in Arizona",
legend=list(title=list(text='<b> Arizona </b>')))
Scatter_AZ <- fig
subplot(Scatter_AZ)
rmarkdown::render_site()
library(data.table)
library(tidyverse)
library(dplyr)
library(plotly)
library(DT)
library(knitr)
library(leaflet)
library(hrbrthemes)
library(gcookbook)
library(viridis)
library(forcats)
library(kableExtra)
# Initialize code chunk options
opts_chunk$set(
warning = FALSE,
message = FALSE,
eval=TRUE,
echo = TRUE,
cache = FALSE,
fig.width = 7,
fig.align = 'center',
fig.asp = 0.618,
out.width = "700px",
class.source = "code-r")
#create date with filter
Data_race_oct <- Data_race_remove %>% filter(Date=="10/4/20")
View(Data_race_oct)
#create date with filter
Data_race_oct <- Data_race_remove %>% filter(Date=="10/4/20")
Data_race_apr <- Data_race_remove %>% filter(Date=="4/12/20")
View(Data_race_apr)
library(data.table)
library(tidyverse)
library(dplyr)
library(plotly)
library(DT)
library(knitr)
library(leaflet)
library(hrbrthemes)
library(gcookbook)
library(viridis)
library(forcats)
library(kableExtra)
# Initialize code chunk options
opts_chunk$set(
warning = FALSE,
message = FALSE,
eval=TRUE,
echo = TRUE,
cache = FALSE,
fig.width = 7,
fig.align = 'center',
fig.asp = 0.618,
out.width = "700px",
class.source = "code-r")
#create date with filter
Data_race_current <- Data_race_remove %>% filter(Date=="10/4/20")
Data_race_init <- Data_race_remove %>% filter(Date=="4/12/20")
setwd("/Users/cynthiabegay/PM-566-first-project/Final Project")
Data_race <-data.table::fread("RaceData_Final.csv")
#Variables of interest are day, month, year, state, total cases, AIAN cases, AIAN deaths
Data_race <- Data_race %>% select (Date, Month, Day, Year, State, State_Code, Cases_AIAN, Cases_Total, Deaths_AIAN, Deaths_Total)
#Try it out
Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.)))
#Evaluating which states have 51 missing AIAN Cases
Data_race2 <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Cases_AIAN == 51) %>%
select(State)
#Removing states with all missing AIAN cases
Data_race_remove <- Data_race %>%
filter(!(State %in% Data_race2$State))
#Replace missing values to 0
Data_race_remove$Cases_AIAN_fmt <- ifelse(is.na(Data_race_remove$Cases_AIAN), 0, Data_race_remove$Cases_AIAN)
#Evaluating which states have 51 missing AIAN Deaths
Data_race_eval <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Deaths_AIAN == 51) %>%
select(State)
#Replace missing values to 0
Data_race_remove$Deaths_AIAN_fmt <- ifelse(is.na(Data_race_remove$Deaths_AIAN), 0, Data_race_remove$Deaths_AIAN)
setwd("/Users/cynthiabegay/PM-566-first-project/Final Project")
Data_race <-data.table::fread("RaceData_Final.csv")
#Variables of interest are day, month, year, state, total cases, AIAN cases, AIAN deaths
Data_race <- Data_race %>% select (Date, Month, Day, Year, State, State_Code, Cases_AIAN, Cases_Total, Deaths_AIAN, Deaths_Total)
#Try it out
Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.)))
#Evaluating which states have 51 missing AIAN Cases
Data_race2 <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Cases_AIAN == 51) %>%
select(State)
#Evaluating which states have 51 missing AIAN Cases
Data_race2 <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Cases_AIAN == 51) %>%
select(State)
#Removing states with all missing AIAN cases
Data_race_remove <- Data_race %>%
filter(!(State %in% Data_race2$State))
#Replace missing values to 0
Data_race_remove$Cases_AIAN_fmt <- ifelse(is.na(Data_race_remove$Cases_AIAN), 0, Data_race_remove$Cases_AIAN)
#Evaluating which states have 51 missing AIAN Deaths
Data_race_eval <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Deaths_AIAN == 51) %>%
select(State)
#Replace missing values to 0
Data_race_remove$Deaths_AIAN_fmt <- ifelse(is.na(Data_race_remove$Deaths_AIAN), 0, Data_race_remove$Deaths_AIAN)
setwd("/Users/cynthiabegay/PM-566-first-project/Final Project")
Data_race <-data.table::fread("RaceData_Final.csv")
#Variables of interest are day, month, year, state, total cases, AIAN cases, AIAN deaths
Data_race <- Data_race %>% select (Date, Month, Day, Year, State, State_Code, Cases_AIAN, Cases_Total, Deaths_AIAN, Deaths_Total)
#Try it out
Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.)))
setwd("/Users/cynthiabegay/PM-566-first-project/Final Project")
Data_race <-data.table::fread("RaceData_Final.csv")
#Variables of interest are day, month, year, state, total cases, AIAN cases, AIAN deaths
Data_race <- Data_race %>% select (Date, Month, Day, Year, State, State_Code, Cases_AIAN, Cases_Total, Deaths_AIAN, Deaths_Total)
#Try it out
Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.)))
#Evaluating which states have 51 missing AIAN Cases
Data_race2 <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Cases_AIAN == 51) %>%
select(State)
#Removing states with all missing AIAN cases
Data_race_remove <- Data_race %>%
filter(!(State %in% Data_race2$State))
#Replace missing values to 0
Data_race_remove$Cases_AIAN_fmt <- ifelse(is.na(Data_race_remove$Cases_AIAN), 0, Data_race_remove$Cases_AIAN)
#Evaluating which states have 51 missing AIAN Deaths
Data_race_eval <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Deaths_AIAN == 51) %>%
select(State)
#Replace missing values to 0
Data_race_remove$Deaths_AIAN_fmt <- ifelse(is.na(Data_race_remove$Deaths_AIAN), 0, Data_race_remove$Deaths_AIAN)
fig <- plot_ly(Data_race_current, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig
#IL outlier new dataset
Data_outlier <- Data_race_remove5 %>% filter(state=="IL" & Date!="4/19/20")
#IL outlier new dataset
Data_outlier <- Data_race_remove5 %>% filter(State=="IL" & Date!="4/19/20")
#IL outlier new dataset
Data_outlier <- Data_race_remove5 %>% filter(State=="IL" , Date!="4/19/20")
#IL outlier new dataset
Data_outlier <- Data_race_remove %>% filter(State=="IL" , Date!="4/19/20")
Data_race_remove4 <- Data_race_remove %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_remove5 <- as.data.frame(pivot_wider(Data_race_remove4, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_remove5) <- Data_race_remove5$Date
Data_race_remove5$Date <- NULL
Data_race_remove5 <- as.matrix(Data_race_remove5)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
plot_ly(x=colnames(Data_race_remove5), y=rev(rownames(Data_race_remove5)),
z=~Data_race_remove5,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths"),
showscale=T)
#IL outlier new dataset
Data_outlier <- Data_race_remove %>% filter(State=="IL" , Date!="4/19/20")
Data_race_outlier1 <- Data_outlier %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_outlier2 <- as.data.frame(pivot_wider(Data_race_outlier1, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_outlier2) <- Data_race_outlier2$Date
Data_race_outlier2$Date <- NULL
Data_race_outlier2 <- as.matrix(Data_race_outlier2)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
plot_ly(x=colnames(Data_race_outlier2), y=rev(rownames(Data_race_outlier2)),
z=~Data_race_outlier2,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths (corrected)"),
showscale=T)
View(Data_outlier)
#IL outlier new dataset
Data_outlier <- Data_race_remove %>% filter(Date!="4/19/20")
Data_race_outlier1 <- Data_outlier %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_outlier2 <- as.data.frame(pivot_wider(Data_race_outlier1, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_outlier2) <- Data_race_outlier2$Date
Data_race_outlier2$Date <- NULL
Data_race_outlier2 <- as.matrix(Data_race_outlier2)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
plot_ly(x=colnames(Data_race_outlier2), y=rev(rownames(Data_race_outlier2)),
z=~Data_race_outlier2,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths (corrected)"),
showscale=T)
#IL outlier new dataset
Data_outlier <- Data_race_remove %>% filter(Date!="4/19/20")
Data_race_outlier1 <- Data_outlier %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_outlier2 <- as.data.frame(pivot_wider(Data_race_outlier1, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_outlier2) <- Data_race_outlier2$Date
Data_race_outlier2$Date <- NULL
Data_race_outlier2 <- as.matrix(Data_race_outlier2)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
plot_ly(x=colnames(Data_race_outlier2), y=rownames(Data_race_outlier2),
z=~Data_race_outlier2,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths (corrected)"),
showscale=T)
plot_ly(x=colnames(Data_race_outlier2), y=rev(rownames(Data_race_outlier2)),
z=~Data_race_outlier2,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths (corrected)"),
showscale=T)
Data_race_remove4 <- Data_race_remove %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_remove5 <- as.data.frame(pivot_wider(Data_race_remove4, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_remove5) <- Data_race_remove5$Date
Data_race_remove5$Date <- NULL
Data_race_remove5 <- as.matrix(Data_race_remove5)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
plot_ly(x=colnames(Data_race_remove5), y=rev(rownames(Data_race_remove5)),
z=~Data_race_remove5,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths"),
showscale=T)
#IL outlier new dataset
Data_outlier <- Data_race_remove %>% filter(Date!="4/19/20")
Data_race_outlier1 <- Data_outlier %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_outlier2 <- as.data.frame(pivot_wider(Data_race_outlier1, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_outlier2) <- Data_race_outlier2$Date
Data_race_outlier2$Date <- NULL
Data_race_outlier2 <- as.matrix(Data_race_outlier2)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
plot_ly(x=colnames(Data_race_outlier2), y=rev(rownames(Data_race_outlier2)),
z=~Data_race_outlier2,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths (corrected)"),
showscale=T)
fig<- Data_race_remove %>% filter(State=="NM") %>% plot_ly(x = ~Month, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines", name='AIAN Covid-19 Cases') %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines", name='AIAN Deaths')
fig<-fig %>% layout(
title = "AIAN Rates in Arizona",
legend=list(title=list(text='<b> Arizona </b>')))
Scatter_NM <- fig
subplot(Scatter_NM)
fig<- Data_race_remove %>% filter(State=="NM") %>% plot_ly(x = ~Month, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines", name='AIAN Covid-19 Cases') %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines", name='AIAN Deaths')
fig<-fig %>% layout(
title = "AIAN Rates in New Mexico",
legend=list(title=list(text='<b> New Mexico </b>')))
Scatter_NM <- fig
subplot(Scatter_NM)
fig<- Data_race_remove %>% filter(State=="OK") %>% plot_ly(x = ~Month, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines", name='AIAN Covid-19 Cases') %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines", name='AIAN Deaths')
fig<-fig %>% layout(
title = "AIAN Rates in Oklahoma",
legend=list(title=list(text='<b> Oklahoma </b>')))
Scatter_OK <- fig
subplot(Scatter_OK)
fig<- Data_race_remove %>% filter(State=="OK") %>% plot_ly(x = ~Week, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines", name='AIAN Covid-19 Cases') %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines", name='AIAN Deaths')
fig<-fig %>% layout(
title = "AIAN Rates in Oklahoma",
legend=list(title=list(text='<b> Oklahoma </b>')))
Scatter_OK <- fig
subplot(Scatter_OK)
fig<- Data_race_remove %>% filter(State=="OK") %>% plot_ly(x = ~Date, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines", name='AIAN Covid-19 Cases') %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines", name='AIAN Deaths')
fig<-fig %>% layout(
title = "AIAN Rates in Oklahoma",
legend=list(title=list(text='<b> Oklahoma </b>')))
Scatter_OK <- fig
subplot(Scatter_OK)
fig<- Data_race_remove %>% filter(State=="OK") %>% plot_ly(x = ~Date, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines", name='AIAN Covid-19 Cases') %>% add_lines(x=~Date, y=~Deaths_AIAN, type = "scatter", mode = "lines", name='AIAN Deaths')
fig<-fig %>% layout(
title = "AIAN Rates in Oklahoma",
legend=list(title=list(text='<b> Oklahoma </b>')))
Scatter_OK <- fig
subplot(Scatter_OK)
library(tidyr)
Data_race_remove2 <- Data_race_remove %>% select(State, Date, Cases_AIAN_fmt,)
Data_race_remove3 <- as.data.frame(pivot_wider(Data_race_remove2, names_from = State, values_from = Cases_AIAN_fmt))
rownames(Data_race_remove3) <- Data_race_remove3$Date
Data_race_remove3$Date <- NULL
Data_race_remove3 <- as.matrix(Data_race_remove3)
# Create a heatmap using plot_ly()
plot_ly(x=colnames(Data_race_remove3), y=rownames(Data_race_remove3),
z=~Data_race_remove3,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Cases"),
showscale=T)
library(tidyr)
Data_race_remove2 <- Data_race_remove %>% select(State, Date, Cases_AIAN_fmt,)
Data_race_remove3 <- as.data.frame(pivot_wider(Data_race_remove2, names_from = State, values_from = Cases_AIAN_fmt))
rownames(Data_race_remove3) <- Data_race_remove3$Date
Data_race_remove3$Date <- NULL
Data_race_remove3 <- as.matrix(Data_race_remove3)
# Create a heatmap using plot_ly()
Fig_hmap <- plot_ly(x=colnames(Data_race_remove3), y=rownames(Data_race_remove3),
z=~Data_race_remove3,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Cases"),
showscale=T)
Data_race_remove4 <- Data_race_remove %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_remove5 <- as.data.frame(pivot_wider(Data_race_remove4, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_remove5) <- Data_race_remove5$Date
Data_race_remove5$Date <- NULL
Data_race_remove5 <- as.matrix(Data_race_remove5)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
fig_hmapd <- plot_ly(x=colnames(Data_race_remove5), y=rev(rownames(Data_race_remove5)),
z=~Data_race_remove5,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths"),
showscale=T)
#IL outlier new dataset
Data_outlier <- Data_race_remove %>% filter(Date!="4/19/20")
Data_race_outlier1 <- Data_outlier %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_outlier2 <- as.data.frame(pivot_wider(Data_race_outlier1, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_outlier2) <- Data_race_outlier2$Date
Data_race_outlier2$Date <- NULL
Data_race_outlier2 <- as.matrix(Data_race_outlier2)
# Create a heatmap using plot_ly()
#comment on outlier then remove from new dataset and re-run
fig_hmapd2 <- plot_ly(x=colnames(Data_race_outlier2), y=rev(rownames(Data_race_outlier2)),
z=~Data_race_outlier2,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths (corrected)"),
showscale=T)
View(Data_race2)
library(tidyr)
Data_race_remove2 <- Data_race_remove %>% select(State, Date, Cases_AIAN_fmt,)
Data_race_remove3 <- as.data.frame(pivot_wider(Data_race_remove2, names_from = State, values_from = Cases_AIAN_fmt))
rownames(Data_race_remove3) <- Data_race_remove3$Date
Data_race_remove3$Date <- NULL
Data_race_remove3 <- as.matrix(Data_race_remove3)
# Create a heatmap using plot_ly()
Fig_hmap <- plot_ly(x=colnames(Data_race_remove3), y=rev(rownames(Data_race_remove3)),
z=~rev(Data_race_remove3),
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Cases"),
showscale=T)
library(tidyr)
Data_race_remove2 <- Data_race_remove %>% select(State, Date, Cases_AIAN_fmt,)
Data_race_remove3 <- as.data.frame(pivot_wider(Data_race_remove2, names_from = State, values_from = Cases_AIAN_fmt))
rownames(Data_race_remove3) <- Data_race_remove3$Date
Data_race_remove3$Date <- NULL
Data_race_remove3 <- as.matrix(Data_race_remove3)
# Create a heatmap using plot_ly()
plot_ly(x=colnames(Data_race_remove3), y=rev(rownames(Data_race_remove3)),
z=~rev(Data_race_remove3),
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Cases"),
showscale=T)
library(tidyr)
Data_race_remove2 <- Data_race_remove %>% select(State, Date, Cases_AIAN_fmt,)
Data_race_remove3 <- as.data.frame(pivot_wider(Data_race_remove2, names_from = State, values_from = Cases_AIAN_fmt))
rownames(Data_race_remove3) <- Data_race_remove3$Date
Data_race_remove3$Date <- NULL
Data_race_remove3 <- as.matrix(Data_race_remove3)
# Create a heatmap using plot_ly()
plot_ly(x=colnames(Data_race_remove3), y=rownames(Data_race_remove3),
z=~Data_race_remove3,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Cases"),
showscale=T)
# Create hover text
Data_race_init$hover <- with(Data_race_init, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 250
# Create the map
fig <- plot_geo(Data_race_init, locationmode = 'USA-states') %>%
add_trace(
z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
color = ~Cases_AIAN_fmt, colors = 'Blues'
)
fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))
fig <- fig %>% layout(
title = paste('AIAN Covid-19 Rates by State as of April 12, 2020', '<br>(Hover for value)'),
geo = set_map_details
)
fig_Apr12 <- fig
# Create hover text
Data_race_init$hover <- with(Data_race_init, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 250
# Create the map
fig <- plot_geo(Data_race_init, locationmode = 'USA-states') %>%
add_trace(
z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
color = ~Cases_AIAN_fmt, colors = 'Greens'
)
fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))
fig <- fig %>% layout(
title = paste('AIAN Covid-19 Rates by State as of April 12, 2020', '<br>(Hover for value)'),
geo = set_map_details
)
fig_Apr12 <- fig
#create date with filter
Data_race_current <- Data_race_remove %>% filter(Date=="10/4/20")
Data_race_init <- Data_race_remove %>% filter(Date=="4/12/20")
View(Data_race_init)
#create date with filter
Data_race_current <- Data_race_remove %>% filter(Date=="10/4/20")
Data_race_init <- Data_race_remove %>% filter(Date=="4/12/20")
View(Data_race_current)
fig <- plot_ly(Data_race_init, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig
fig <- plot_ly(Data_race_init, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig2
fig <- plot_ly(Data_race_init, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig2 <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
subplot(fig2, fig)
fig <- plot_ly(Data_race_init, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig2 <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
subplot(fig2, fig1)
fig1 <- plot_ly(Data_race_init, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig2 <- fig1 %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig3 <- plot_ly(Data_race_current, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig4 <- fig3 %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
subplot (fig2, fig4)
fig <- plot_ly(Data_race_current, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig1 <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig <- plot_ly(Data_race_current, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig <- plot_ly(Data_race_current, x = ~State, y = ~Cases_AIAN_fmt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "Overall AIAN Covid-19 Cases by State",
xaxis = list(title = "State"),
yaxis = list(title = "AIAN Covid-19 Cases"))
fig
