rmarkdown::render_site()
library(data.table)
library(tidyverse)
library(dplyr)
library(plotly)
library(DT)
library(knitr)
library(leaflet)
library(hrbrthemes)
library(gcookbook)
library(viridis)
library(forcats)
library(kableExtra)
# Initialize code chunk options
opts_chunk$set(
warning = FALSE,
message = FALSE,
eval=TRUE,
echo = TRUE,
cache = FALSE,
fig.width = 7,
fig.align = 'center',
fig.asp = 0.618,
out.width = "700px",
class.source = "code-r")
# Create hover text
Data_race_init$hover <- with(Data_race_init, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 250
# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>%
add_trace(
z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
color = ~Cases_AIAN_fmt, colors = 'Blues'
)
fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))
# Create hover text
Data_race_current$hover <- with(Data_race_current, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 13000
# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>%
add_trace(
z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
color = ~Cases_AIAN_fmt, colors = 'Purples'
)
fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))
fig <- fig %>% layout(
title = paste('AIAN Covid-19 Rates by State as of October 04, 2020', '<br>(Hover for value)'),
geo = set_map_details
)
fig_Oct4 <- fig
subplot(fig_Apr12, fig_Oct4)
library(data.table)
library(tidyverse)
library(dplyr)
library(plotly)
library(DT)
library(knitr)
library(leaflet)
library(hrbrthemes)
library(gcookbook)
library(viridis)
library(forcats)
library(kableExtra)
# Initialize code chunk options
opts_chunk$set(
warning = FALSE,
message = FALSE,
eval=TRUE,
echo = TRUE,
cache = FALSE,
fig.width = 7,
fig.align = 'center',
fig.asp = 0.618,
out.width = "700px",
class.source = "code-r")
setwd("/Users/cynthiabegay/PM-566-first-project/Final Project")
Data_race <-data.table::fread("RaceData_Final.csv")
#Variables of interest are day, month, year, state, total cases, AIAN cases, AIAN deaths
Data_race <- Data_race %>% select (Date, Month, Day, Year, State, State_Code, Cases_AIAN, Cases_Total, Deaths_AIAN, Deaths_Total)
#Try it out
Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.)))
#Evaluating which states have 51 missing AIAN Cases
Data_race2 <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Cases_AIAN == 51) %>%
select(State)
#Removing states with all missing AIAN cases
Data_race_remove <- Data_race %>%
filter(!(State %in% Data_race2$State))
#Replace missing values to 0
Data_race_remove$Cases_AIAN_fmt <- ifelse(is.na(Data_race_remove$Cases_AIAN), 0, Data_race_remove$Cases_AIAN)
#Evaluating which states have 51 missing AIAN Deaths
Data_race_eval <- Data_race %>%
group_by(State) %>%
summarise_all(~sum(is.na(.))) %>%
filter(Deaths_AIAN == 51) %>%
select(State)
#Replace missing values to 0
Data_race_remove$Deaths_AIAN_fmt <- ifelse(is.na(Data_race_remove$Deaths_AIAN), 0, Data_race_remove$Deaths_AIAN)
#Keep current date
Data_race_current <- Data_race_remove
Data_race_current$Date_fmt <- as.Date(Data_race_current$Date)
with (Data_race_current, Data_race_current[Date == "10/4/20"])
#Keep current date
Data_race_init <- Data_race_remove
Data_race_init$Date_fmt <- as.Date(Data_race_init$Date)
with (Data_race_init, Data_race_init[Date == "4/12/20"])
p1<-ggplot(Data_race_remove,
aes( x=Month, y=Cases_AIAN_fmt, color=State )
) + geom_line() + geom_point(size = .5, alpha = 0.5)
ggplotly(p1)
plot_ly(Data_race_remove, x = ~Month, y = ~Cases_AIAN_fmt, color = ~State, type = "scatter", mode = "lines")
Data_race_remove %>% filter(State=="AZ") %>% plot_ly(x = ~Month, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines") %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines")
library(tidyr)
Data_race_remove2 <- Data_race_remove %>% select(State, Date, Cases_AIAN_fmt,)
Data_race_remove3 <- as.data.frame(pivot_wider(Data_race_remove2, names_from = State, values_from = Cases_AIAN_fmt))
rownames(Data_race_remove3) <- Data_race_remove3$Date
Data_race_remove3$Date <- NULL
Data_race_remove3 <- as.matrix(Data_race_remove3)
# Create a heatmap using plot_ly()
plot_ly(x=colnames(Data_race_remove3), y=rownames(Data_race_remove3),
z=~Data_race_remove3,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Cases"),
showscale=T)
plot_ly(x=colnames(Data_race_remove3), y=rownames(Data_race_remove3),
z=~Data_race_remove3,
type="surface",
colorbar = list(title = "AIAN Covid-19 Cases"),
showscale=T)
Data_race_remove4 <- Data_race_remove %>% select(State, Date, Deaths_AIAN_fmt)
Data_race_remove5 <- as.data.frame(pivot_wider(Data_race_remove4, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_remove5) <- Data_race_remove5$Date
Data_race_remove5$Date <- NULL
Data_race_remove5 <- as.matrix(Data_race_remove5)
# Create a heatmap using plot_ly()
plot_ly(x=colnames(Data_race_remove5), y=rownames(Data_race_remove5),
z=~Data_race_remove5,
type="heatmap",
colorbar = list(title = "AIAN Covid-19 Deaths"),
showscale=T)
# Create hover text
Data_race_init$hover <- with(Data_race_init, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 250
# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>%
add_trace(
z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
color = ~Cases_AIAN_fmt, colors = 'Blues'
)
fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))
# Create hover text
Data_race_init$hover <- with(Data_race_init, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 250
# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>%
add_trace(
z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
color = ~Cases_AIAN_fmt, colors = 'Blues'
)
fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))
fig <- fig %>% colorbar(title = "AIAN April Covid-19 Cases", limits = c(0,shadeLimit))
# Create hover text
Data_race_init$hover <- with(Data_race_init, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 250
# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>%
add_trace(
z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
color = ~Cases_AIAN_fmt, colors = 'Blues'
)
fig <- fig %>% colorbar(title = "AIAN April Covid-19 Cases", limits = c(0,shadeLimit))
