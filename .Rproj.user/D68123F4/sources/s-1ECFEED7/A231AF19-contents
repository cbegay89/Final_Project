---
title: "PM566 Final Project"
author: "Cynthia Begay"
output: 
    html_document:
        toc: TRUE
        toc_float: TRUE
---

<br>

Introduction: 
The COVID Racial Data Tracker is a volunteer organization launched from The Atlantic and was created in collaboration between the COVID Tracking Project and the Boston University Center for Antiracist Research. On April 12, 2020, this team began collecting race and ethnicity data from every state and eventually US territories. The tracker is updated twice per week. This dataset includes the total number of COVID cases and number of reported deaths due to COVID by race and ethnicity. While this is the only COVID related dataset I could find that reports race and ethnicity, the project acknowledges this is not a comprehensive dataset on race and ethnicity. 
As the COVID-19 pandemic unfolds, we are quickly learning about the disparity between race and COVID-19 cases. Currently Black, Indigenous, and Latinx people are most affected by COVID-19. As it stands, Black people have the highest disparity and are dying 2.3 times the rate of white people. American Indian and Alaska Native (AIAN) have the second highest disparity and currently have a death rate of 65 per 100,000 people compared to non-Hispanic white 43 per 100,000. Historically, AIAN communities are left out of the conversation when it comes to reporting data, especially emerging data like COVID-19 cases/deaths. The current national conversation around AIAN COVID disparities has been about (my tribe) the Navajo Nation, which at its worst, had the highest infection rate in the country (higher than New York in its peak). It is important to understand the rest of the landscape in the US when it comes to tribal communities as 70% of the AIAN population live in urban cities. I am using this project to explore AIAN COVID rates by state to understand where the highest disparities lie. The questions I will be exploring in this project are (1) which states reported the highest AIAN COVID cases in the US and (2) which states reported the highest AIAN COVID deaths in the US?


<br>

```{r setup, message=FALSE, echo=FALSE, warning=FALSE}

library(data.table)
library(tidyverse)
library(dplyr)
library(plotly)
library(DT)
library(knitr)

library(leaflet)
library(hrbrthemes)
library(gcookbook)
library(viridis)
library(forcats)
library(kableExtra)

# Initialize code chunk options
opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  eval=TRUE,
  echo = TRUE,
  cache = FALSE,
  fig.width = 7, 
  fig.align = 'center',
  fig.asp = 0.618,
  out.width = "700px",
  class.source = "code-r")
```

```{css, echo = FALSE}
.code-r { /* Code block */
  font-size: 15px;
}

.code-r-small { /* Code block */
  font-size: 10px;
}
```

<br>

## First step

First I will source any necessary code, e.g. `process_covid_data.R`:

```{r load-data}
setwd("/Users/cynthiabegay/PM-566-first-project/Final Project")
Data_race <-data.table::fread("RaceData_Final.csv")

#Variables of interest are day, month, year, state, total cases, AIAN cases, AIAN deaths
Data_race <- Data_race %>% select (Date, Month, Day, Year, State, State_Code, Cases_AIAN, Cases_Total, Deaths_AIAN, Deaths_Total)

#Try it out
Data_race %>% 
  group_by(State) %>% 
  summarise_all(~sum(is.na(.)))

 #Evaluating which states have 51 missing AIAN Cases
Data_race2 <- Data_race %>%
  group_by(State) %>% 
  summarise_all(~sum(is.na(.))) %>%
  filter(Cases_AIAN == 51) %>%
  select(State)

#Removing states with all missing AIAN cases
Data_race_remove <- Data_race %>%
  filter(!(State %in% Data_race2$State))

#Replace missing values to 0
Data_race_remove$Cases_AIAN_fmt <- ifelse(is.na(Data_race_remove$Cases_AIAN), 0, Data_race_remove$Cases_AIAN)

#Evaluating which states have 51 missing AIAN Deaths
Data_race_eval <- Data_race %>%
  group_by(State) %>% 
  summarise_all(~sum(is.na(.))) %>%
  filter(Deaths_AIAN == 51) %>%
  select(State)

#Replace missing values to 0
Data_race_remove$Deaths_AIAN_fmt <- ifelse(is.na(Data_race_remove$Deaths_AIAN), 0, Data_race_remove$Deaths_AIAN)

```

```{r October df, EVAL=TRUE}
#Keep current date
Data_race_current <- Data_race_remove

Data_race_current$Date_fmt <- as.Date(Data_race_current$Date)
with (Data_race_current, Data_race_current[Date == "10/4/20"])
```
```{r April date df, EVAL=TRUE}
#Keep current date
Data_race_init <- Data_race_remove

Data_race_init$Date_fmt <- as.Date(Data_race_init$Date)
with (Data_race_init, Data_race_init[Date == "4/12/20"])
```

<br>

## Second step

Then I will add some code to create the **plotly** figures

Note: You need to name each code chunk, like this one: `plot1`


```{r plot 1, EVAL=TRUE}
p1<-ggplot(Data_race_remove, 
           aes( x=Month, y=Cases_AIAN_fmt, color=State )
           ) + geom_line() + geom_point(size = .5, alpha = 0.5)
ggplotly(p1)

plot_ly(Data_race_remove, x = ~Month, y = ~Cases_AIAN_fmt, color = ~State, type = "scatter", mode = "lines")

Data_race_remove %>% filter(State=="AZ") %>% plot_ly(x = ~Month, y = ~Cases_AIAN_fmt, type = "scatter", mode = "lines") %>% add_lines(x=~Month, y=~Deaths_AIAN, type = "scatter", mode = "lines") 
```

```{r heat map cases}
library(tidyr)

Data_race_remove2 <- Data_race_remove %>% select(State, Date, Cases_AIAN_fmt,) 
Data_race_remove3 <- as.data.frame(pivot_wider(Data_race_remove2, names_from = State, values_from = Cases_AIAN_fmt))
rownames(Data_race_remove3) <- Data_race_remove3$Date
Data_race_remove3$Date <- NULL
Data_race_remove3 <- as.matrix(Data_race_remove3)

# Create a heatmap using plot_ly()
plot_ly(x=colnames(Data_race_remove3), y=rownames(Data_race_remove3),
             z=~Data_race_remove3,
             type="heatmap",
            colorbar = list(title = "AIAN Covid-19 Cases"),
             showscale=T) 

plot_ly(x=colnames(Data_race_remove3), y=rownames(Data_race_remove3),
             z=~Data_race_remove3,
             type="surface",
            colorbar = list(title = "AIAN Covid-19 Cases"),
             showscale=T) 
        
```

```{r heat map deaths}
Data_race_remove4 <- Data_race_remove %>% select(State, Date, Deaths_AIAN_fmt) 
Data_race_remove5 <- as.data.frame(pivot_wider(Data_race_remove4, names_from = State, values_from = Deaths_AIAN_fmt))
rownames(Data_race_remove5) <- Data_race_remove5$Date
Data_race_remove5$Date <- NULL
Data_race_remove5 <- as.matrix(Data_race_remove5)

# Create a heatmap using plot_ly()
plot_ly(x=colnames(Data_race_remove5), y=rownames(Data_race_remove5),
             z=~Data_race_remove5,
             type="heatmap",
            colorbar = list(title = "AIAN Covid-19 Deaths"),
             showscale=T)  
```
```{r April Map AIAN Cases, class.source="code-r-small"}
# Create hover text
Data_race_init$hover <- with(Data_race_init, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))

# Set up mapping details
set_map_details <- list(
  scope = 'usa',
  projection = list(type = 'albers usa'),
  showlakes = TRUE,
  lakecolor = toRGB('white')
)

# Make sure both maps are on the same color scale
shadeLimit <- 250

# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>% 
  add_trace(
    z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
    color = ~Cases_AIAN_fmt, colors = 'Blues'
  )

fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))

fig <- fig %>% layout(
    title = paste('AIAN Covid-19 Rates by State as of April 12, 2020', '<br>(Hover for value)'),
    geo = set_map_details
  )
fig_Apr12 <- fig
```


```{r map, class.source="code-r-small"}
# Create hover text
Data_race_current$hover <- with(Data_race_current, paste(State, '<br>', "AIAN Cases:", Cases_AIAN_fmt))

# Set up mapping details
set_map_details <- list(
  scope = 'usa',
  projection = list(type = 'albers usa'),
  showlakes = TRUE,
  lakecolor = toRGB('white')
)

# Make sure both maps are on the same color scale
shadeLimit <- 13000

# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>% 
  add_trace(
    z = ~Cases_AIAN_fmt, text = ~hover, locations = ~State,
    color = ~Cases_AIAN_fmt, colors = 'Purples'
  )

fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))

fig <- fig %>% layout(
    title = paste('AIAN Covid-19 Rates by State as of October 04, 2020', '<br>(Hover for value)'),
    geo = set_map_details
  )
fig_Oct4 <- fig

subplot(fig_Apr12, fig_Oct4)
```


```{r deaths map, class.source="code-r-small"}
# Extract the data for each state by its abbreviation
# Create hover text
Data_race_current$hover <- with(Data_race_current, paste(State, '<br>', "AIAN Deaths:", Deaths_AIAN_fmt))

# Set up mapping details
set_map_details <- list(
  scope = 'usa',
  projection = list(type = 'albers usa'),
  showlakes = TRUE,
  lakecolor = toRGB('white')
)

# Make sure both maps are on the same color scale
shadeLimit <- 700

# Create the map
fig <- plot_geo(Data_race_current, locationmode = 'USA-states') %>% 
  add_trace(
    z = ~Deaths_AIAN_fmt, text = ~hover, locations = ~State,
    color = ~Deaths_AIAN_fmt, colors = 'Reds'
  )

fig <- fig %>% colorbar(title = "AIAN Covid-19 Cases", limits = c(0,shadeLimit))

fig <- fig %>% layout(
    title = paste('AIAN Covid-19 Rates by State as of October 04, 2020', '<br>(Hover for value)'),
    geo = set_map_details
  )
fig_Oct4_deaths <- fig

### Plot side by side 
### FINISH THE CODE HERE ###
subplot(fig_Oct4, fig_Oct4_deaths )

  
```

<br>

## Third step {.tabset}

Create tabs to display each figure

### Map: AIAN Covid-19 Cases

```{r p1}
fig_Oct4
```

### Map: AIAN Covid-19 Deaths

```{r p2}
fig_Oct4_deaths
```

## {-}

<br>

Done!

<br>
<br>